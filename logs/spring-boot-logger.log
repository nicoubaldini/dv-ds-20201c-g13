2020-07-10 00:00:16,681 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8090-exec-2] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `ar.edu.davinci.dvds20201cg13.controlador.rest.request.ClienteInsertRequest` out of START_ARRAY token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `ar.edu.davinci.dvds20201cg13.controlador.rest.request.ClienteInsertRequest` out of START_ARRAY token
 at [Source: (PushbackInputStream); line: 1, column: 1]]
2020-07-10 00:00:51,142 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8090-exec-4] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `ar.edu.davinci.dvds20201cg13.controlador.rest.request.ClienteInsertRequest` out of START_ARRAY token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `ar.edu.davinci.dvds20201cg13.controlador.rest.request.ClienteInsertRequest` out of START_ARRAY token
 at [Source: (PushbackInputStream); line: 1, column: 1]]
2020-07-10 00:00:55,702 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8090-exec-6] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `ar.edu.davinci.dvds20201cg13.controlador.rest.request.ClienteInsertRequest` out of START_ARRAY token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `ar.edu.davinci.dvds20201cg13.controlador.rest.request.ClienteInsertRequest` out of START_ARRAY token
 at [Source: (PushbackInputStream); line: 1, column: 1]]
2020-07-10 00:01:04,299 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8090-exec-8] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `ar.edu.davinci.dvds20201cg13.controlador.rest.request.ClienteInsertRequest` out of START_ARRAY token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `ar.edu.davinci.dvds20201cg13.controlador.rest.request.ClienteInsertRequest` out of START_ARRAY token
 at [Source: (PushbackInputStream); line: 1, column: 1]]
2020-07-10 00:01:07,769 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8090-exec-10] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `ar.edu.davinci.dvds20201cg13.controlador.rest.request.ClienteInsertRequest` out of START_ARRAY token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `ar.edu.davinci.dvds20201cg13.controlador.rest.request.ClienteInsertRequest` out of START_ARRAY token
 at [Source: (PushbackInputStream); line: 1, column: 1]]
2020-07-10 00:01:13,048 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8090-exec-2] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize instance of `ar.edu.davinci.dvds20201cg13.controlador.rest.request.ClienteInsertRequest` out of START_ARRAY token; nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `ar.edu.davinci.dvds20201cg13.controlador.rest.request.ClienteInsertRequest` out of START_ARRAY token
 at [Source: (PushbackInputStream); line: 1, column: 1]]
2020-07-10 00:01:46,213 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8090-exec-4] SQL Error: 1062, SQLState: 23000
2020-07-10 00:01:46,214 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8090-exec-4] Duplicate entry 'abc@gmail.com' for key 'cli_email_UNIQUE'
2020-07-10 00:01:58,029 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8090-exec-7] SQL Error: 1062, SQLState: 23000
2020-07-10 00:01:58,030 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [http-nio-8090-exec-7] Duplicate entry 'abc@gmail.com' for key 'cli_email_UNIQUE'
2020-07-10 00:46:08,418 INFO ar.edu.davinci.dvds20201cg13.controlador.rest.ProductoRestControlador [http-nio-8090-exec-9] Producto a insertar: ProductoInsertRequest(name=Lokesh, price=null)
2020-07-10 00:46:08,421 INFO ar.edu.davinci.dvds20201cg13.servicio.ProductoServicio [http-nio-8090-exec-9] grabarProducto: producto: Producto(id=null, name=Lokesh, price=null)
2020-07-10 00:46:08,432 INFO ar.edu.davinci.dvds20201cg13.servicio.ProductoServicio [http-nio-8090-exec-9] Mensaje: Validation failed for classes [ar.edu.davinci.dvds20201cg13.modelo.Producto] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='*El precio no puede ser nulo', propertyPath=price, rootBeanClass=class ar.edu.davinci.dvds20201cg13.modelo.Producto, messageTemplate='*El precio no puede ser nulo'}
]
2020-07-10 00:46:08,433 INFO ar.edu.davinci.dvds20201cg13.servicio.ProductoServicio [http-nio-8090-exec-9] Causa: null
2020-07-10 00:49:23,074 INFO ar.edu.davinci.dvds20201cg13.controlador.rest.ProductoRestControlador [http-nio-8090-exec-3] Producto a insertar: ProductoInsertRequest(name=prod1, price=50)
2020-07-10 00:49:23,075 INFO ar.edu.davinci.dvds20201cg13.servicio.ProductoServicio [http-nio-8090-exec-3] grabarProducto: producto: Producto(id=null, name=prod1, price=50)
2020-07-10 00:49:46,532 INFO ar.edu.davinci.dvds20201cg13.controlador.rest.ProductoRestControlador [http-nio-8090-exec-7] Producto a insertar: ProductoInsertRequest(name=prod1, price=50)
2020-07-10 00:49:46,533 INFO ar.edu.davinci.dvds20201cg13.servicio.ProductoServicio [http-nio-8090-exec-7] grabarProducto: producto: Producto(id=null, name=prod1, price=50)
2020-07-10 00:50:15,600 INFO ar.edu.davinci.dvds20201cg13.servicio.ProductoServicio [http-nio-8090-exec-9] grabarProducto: producto: Producto(id=2, name=prod2, price=100)
2020-07-10 00:51:08,769 INFO ar.edu.davinci.dvds20201cg13.servicio.ProductoServicio [http-nio-8090-exec-1] buscarProductoPorNombre: nombre: prod2
2020-07-10 00:51:08,774 INFO ar.edu.davinci.dvds20201cg13.servicio.ProductoServicio [http-nio-8090-exec-1] productos.size: 1
2020-07-10 00:51:16,979 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8090-exec-2] Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required String parameter 'nombre' is not present]
2020-07-10 00:51:21,827 INFO ar.edu.davinci.dvds20201cg13.servicio.ProductoServicio [http-nio-8090-exec-4] buscarProductoPorNombre: nombre: prod2
2020-07-10 00:51:21,829 INFO ar.edu.davinci.dvds20201cg13.servicio.ProductoServicio [http-nio-8090-exec-4] productos.size: 1
2020-07-10 00:52:08,506 INFO ar.edu.davinci.dvds20201cg13.servicio.ProductoServicio [http-nio-8090-exec-5] Pagegable: offset: 0 - pageSize:10
2020-07-10 00:52:17,639 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8090-exec-6] Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "listarXPagina"]
2020-07-10 00:52:19,224 INFO ar.edu.davinci.dvds20201cg13.servicio.ProductoServicio [http-nio-8090-exec-8] Pagegable: offset: 0 - pageSize:10
2020-07-10 00:52:31,382 INFO ar.edu.davinci.dvds20201cg13.controlador.rest.ProductoRestControlador [http-nio-8090-exec-9] Producto a insertar: ProductoInsertRequest(name=gfdngfnd, price=4545)
2020-07-10 00:52:31,383 INFO ar.edu.davinci.dvds20201cg13.servicio.ProductoServicio [http-nio-8090-exec-9] grabarProducto: producto: Producto(id=null, name=gfdngfnd, price=4545)
2020-07-10 00:52:37,182 INFO ar.edu.davinci.dvds20201cg13.servicio.ProductoServicio [http-nio-8090-exec-1] Pagegable: offset: 0 - pageSize:10
2020-07-10 01:02:32,119 INFO ar.edu.davinci.dvds20201cg13.controlador.rest.OrdenRestControlador [http-nio-8090-exec-4] listar todos los ordenes paginados
2020-07-10 01:02:32,122 INFO ar.edu.davinci.dvds20201cg13.controlador.rest.OrdenRestControlador [http-nio-8090-exec-4] ordenPage size:20
2020-07-10 01:02:32,123 INFO ar.edu.davinci.dvds20201cg13.controlador.rest.OrdenRestControlador [http-nio-8090-exec-4] ordenPage hasContent:20
2020-07-10 01:02:44,616 INFO ar.edu.davinci.dvds20201cg13.controlador.rest.OrdenRestControlador [http-nio-8090-exec-6] listar todos los ordenes paginados
2020-07-10 01:02:44,619 INFO ar.edu.davinci.dvds20201cg13.controlador.rest.OrdenRestControlador [http-nio-8090-exec-6] ordenPage size:20
2020-07-10 01:02:44,619 INFO ar.edu.davinci.dvds20201cg13.controlador.rest.OrdenRestControlador [http-nio-8090-exec-6] ordenPage hasContent:20
2020-07-10 01:12:54,320 INFO ar.edu.davinci.dvds20201cg13.controlador.rest.OrdenRestControlador [http-nio-8090-exec-9] Orden a insertar: OrdenInsertRequest(clienteId=1, items=[OrdenItemInsertRequest(productoId=1, quantity=10)])
2020-07-10 01:12:54,322 INFO ar.edu.davinci.dvds20201cg13.OrikaConfiguration$2 [http-nio-8090-exec-9]  #### Custom mapping to OrdenInsertRequest and Orden #### 
2020-07-10 01:12:54,323 INFO ar.edu.davinci.dvds20201cg13.controlador.rest.OrdenRestControlador [http-nio-8090-exec-9] Orden mapeada: Orden(id=null, client=Cliente(id=1, name=null, lastName=null, email=null, password=null), items=[OrdenItem(id=null, product=Producto(id=1, name=null, price=null), quantity=10)], date=null)
2020-07-10 01:12:54,324 INFO ar.edu.davinci.dvds20201cg13.servicio.OrdenServicio [http-nio-8090-exec-9] prepararOrdenAGrabar: orden: Orden(id=null, client=Cliente(id=1, name=null, lastName=null, email=null, password=null), items=[OrdenItem(id=null, product=Producto(id=1, name=null, price=null), quantity=10)], date=null)
2020-07-10 01:12:54,328 INFO ar.edu.davinci.dvds20201cg13.servicio.OrdenServicio [http-nio-8090-exec-9] prepararOrdenAGrabar: orden final: Orden(id=null, client=Cliente(id=1, name=Lokesh, lastName=Gupta, email=abc@gmail.com, password=abc), items=[OrdenItem(id=null, product=Producto(id=1, name=null, price=null), quantity=10)], date=Fri Jul 10 01:12:54 ART 2020)
2020-07-10 01:12:54,329 INFO ar.edu.davinci.dvds20201cg13.servicio.OrdenServicio [http-nio-8090-exec-9] grabarOrden: orden: Orden(id=null, client=Cliente(id=1, name=Lokesh, lastName=Gupta, email=abc@gmail.com, password=abc), items=[OrdenItem(id=null, product=Producto(id=1, name=null, price=null), quantity=10)], date=Fri Jul 10 01:12:54 ART 2020)
2020-07-10 01:12:54,343 INFO ar.edu.davinci.dvds20201cg13.servicio.OrdenServicio [http-nio-8090-exec-9] Mensaje: detached entity passed to persist: ar.edu.davinci.dvds20201cg13.modelo.Producto; nested exception is org.hibernate.PersistentObjectException: detached entity passed to persist: ar.edu.davinci.dvds20201cg13.modelo.Producto
2020-07-10 01:12:54,344 INFO ar.edu.davinci.dvds20201cg13.servicio.OrdenServicio [http-nio-8090-exec-9] Causa: org.hibernate.PersistentObjectException: detached entity passed to persist: ar.edu.davinci.dvds20201cg13.modelo.Producto
2020-07-10 01:13:03,615 INFO ar.edu.davinci.dvds20201cg13.controlador.rest.OrdenRestControlador [http-nio-8090-exec-10] listar todos los ordenes paginados
2020-07-10 01:13:03,617 INFO ar.edu.davinci.dvds20201cg13.controlador.rest.OrdenRestControlador [http-nio-8090-exec-10] ordenPage size:20
2020-07-10 01:13:03,617 INFO ar.edu.davinci.dvds20201cg13.controlador.rest.OrdenRestControlador [http-nio-8090-exec-10] ordenPage hasContent:20
2020-07-10 01:14:42,691 INFO ar.edu.davinci.dvds20201cg13.servicio.ProductoServicio [http-nio-8090-exec-3] Pagegable: offset: 0 - pageSize:10
2020-07-10 01:14:52,568 INFO ar.edu.davinci.dvds20201cg13.controlador.rest.OrdenRestControlador [http-nio-8090-exec-4] listar todos los ordenes paginados
2020-07-10 01:14:52,570 INFO ar.edu.davinci.dvds20201cg13.controlador.rest.OrdenRestControlador [http-nio-8090-exec-4] ordenPage size:20
2020-07-10 01:14:52,570 INFO ar.edu.davinci.dvds20201cg13.controlador.rest.OrdenRestControlador [http-nio-8090-exec-4] ordenPage hasContent:20
2020-07-10 01:52:28,020 INFO ar.edu.davinci.dvds20201cg13.controlador.rest.OrdenRestControlador [http-nio-8090-exec-6] Orden a insertar: OrdenInsertRequest(clienteId=1, items=[OrdenItemInsertRequest(productoId=1, quantity=10)])
2020-07-10 01:52:28,021 INFO ar.edu.davinci.dvds20201cg13.OrikaConfiguration$2 [http-nio-8090-exec-6]  #### Custom mapping to OrdenInsertRequest and Orden #### 
2020-07-10 01:52:28,021 INFO ar.edu.davinci.dvds20201cg13.controlador.rest.OrdenRestControlador [http-nio-8090-exec-6] Orden mapeada: Orden(id=null, client=Cliente(id=1, name=null, lastName=null, email=null, password=null), items=[OrdenItem(id=null, product=Producto(id=1, name=null, price=null), quantity=10)], date=null)
2020-07-10 01:52:28,022 INFO ar.edu.davinci.dvds20201cg13.servicio.OrdenServicio [http-nio-8090-exec-6] prepararOrdenAGrabar: orden: Orden(id=null, client=Cliente(id=1, name=null, lastName=null, email=null, password=null), items=[OrdenItem(id=null, product=Producto(id=1, name=null, price=null), quantity=10)], date=null)
2020-07-10 01:52:28,026 INFO ar.edu.davinci.dvds20201cg13.servicio.OrdenServicio [http-nio-8090-exec-6] prepararOrdenAGrabar: orden final: Orden(id=null, client=Cliente(id=1, name=Lokesh, lastName=Gupta, email=abc@gmail.com, password=abc), items=[OrdenItem(id=null, product=Producto(id=1, name=null, price=null), quantity=10)], date=Fri Jul 10 01:52:28 ART 2020)
2020-07-10 01:52:28,027 INFO ar.edu.davinci.dvds20201cg13.servicio.OrdenServicio [http-nio-8090-exec-6] grabarOrden: orden: Orden(id=null, client=Cliente(id=1, name=Lokesh, lastName=Gupta, email=abc@gmail.com, password=abc), items=[OrdenItem(id=null, product=Producto(id=1, name=null, price=null), quantity=10)], date=Fri Jul 10 01:52:28 ART 2020)
2020-07-10 01:52:28,030 INFO ar.edu.davinci.dvds20201cg13.servicio.OrdenServicio [http-nio-8090-exec-6] Mensaje: detached entity passed to persist: ar.edu.davinci.dvds20201cg13.modelo.Producto; nested exception is org.hibernate.PersistentObjectException: detached entity passed to persist: ar.edu.davinci.dvds20201cg13.modelo.Producto
2020-07-10 01:52:28,031 INFO ar.edu.davinci.dvds20201cg13.servicio.OrdenServicio [http-nio-8090-exec-6] Causa: org.hibernate.PersistentObjectException: detached entity passed to persist: ar.edu.davinci.dvds20201cg13.modelo.Producto
2020-07-10 02:03:57,256 INFO ar.edu.davinci.dvds20201cg13.controlador.rest.OrdenRestControlador [http-nio-8090-exec-10] Orden a insertar: OrdenInsertRequest(clienteId=null, items=[OrdenItemInsertRequest(productoId=null, quantity=153)])
2020-07-10 02:03:57,257 INFO ar.edu.davinci.dvds20201cg13.OrikaConfiguration$2 [http-nio-8090-exec-10]  #### Custom mapping to OrdenInsertRequest and Orden #### 
2020-07-10 02:03:57,257 INFO ar.edu.davinci.dvds20201cg13.controlador.rest.OrdenRestControlador [http-nio-8090-exec-10] Orden mapeada: Orden(id=null, client=Cliente(id=null, name=null, lastName=null, email=null, password=null), items=[OrdenItem(id=null, product=Producto(id=null, name=null, price=null), quantity=153)], date=null)
2020-07-10 02:03:57,257 INFO ar.edu.davinci.dvds20201cg13.servicio.OrdenServicio [http-nio-8090-exec-10] prepararOrdenAGrabar: orden: Orden(id=null, client=Cliente(id=null, name=null, lastName=null, email=null, password=null), items=[OrdenItem(id=null, product=Producto(id=null, name=null, price=null), quantity=153)], date=null)
2020-07-10 02:09:32,064 INFO ar.edu.davinci.dvds20201cg13.controlador.rest.OrdenRestControlador [http-nio-8090-exec-3] Orden a insertar: OrdenInsertRequest(clienteId=null, items=[OrdenItemInsertRequest(productoId=null, quantity=153)])
2020-07-10 02:09:32,065 INFO ar.edu.davinci.dvds20201cg13.OrikaConfiguration$2 [http-nio-8090-exec-3]  #### Custom mapping to OrdenInsertRequest and Orden #### 
2020-07-10 02:09:32,065 INFO ar.edu.davinci.dvds20201cg13.controlador.rest.OrdenRestControlador [http-nio-8090-exec-3] Orden mapeada: Orden(id=null, client=Cliente(id=null, name=null, lastName=null, email=null, password=null), items=[OrdenItem(id=null, product=Producto(id=null, name=null, price=null), quantity=153)], date=null)
2020-07-10 02:09:32,065 INFO ar.edu.davinci.dvds20201cg13.servicio.OrdenServicio [http-nio-8090-exec-3] prepararOrdenAGrabar: orden: Orden(id=null, client=Cliente(id=null, name=null, lastName=null, email=null, password=null), items=[OrdenItem(id=null, product=Producto(id=null, name=null, price=null), quantity=153)], date=null)
2020-07-10 02:15:11,964 INFO ar.edu.davinci.dvds20201cg13.controlador.rest.OrdenRestControlador [http-nio-8090-exec-7] Orden a insertar: OrdenInsertRequest(clienteId=null, items=[OrdenItemInsertRequest(productoId=null, quantity=153)])
2020-07-10 02:15:11,964 INFO ar.edu.davinci.dvds20201cg13.OrikaConfiguration$2 [http-nio-8090-exec-7]  #### Custom mapping to OrdenInsertRequest and Orden #### 
2020-07-10 02:15:11,964 INFO ar.edu.davinci.dvds20201cg13.controlador.rest.OrdenRestControlador [http-nio-8090-exec-7] Orden mapeada: Orden(id=null, client=Cliente(id=null, name=null, lastName=null, email=null, password=null), items=[OrdenItem(id=null, product=Producto(id=null, name=null, price=null), quantity=153)], date=null)
2020-07-10 02:15:11,964 INFO ar.edu.davinci.dvds20201cg13.servicio.OrdenServicio [http-nio-8090-exec-7] prepararOrdenAGrabar: orden: Orden(id=null, client=Cliente(id=null, name=null, lastName=null, email=null, password=null), items=[OrdenItem(id=null, product=Producto(id=null, name=null, price=null), quantity=153)], date=null)
2020-07-10 02:17:31,858 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringContextShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-07-10 02:17:31,860 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2020-07-10 02:17:31,862 INFO com.zaxxer.hikari.HikariDataSource [SpringContextShutdownHook] HikariPool-1 - Shutdown initiated...
2020-07-10 02:17:31,863 INFO com.zaxxer.hikari.HikariDataSource [SpringContextShutdownHook] HikariPool-1 - Shutdown completed.
